// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ===========================
// BẢNG NGƯỜI DÙNG - Tích hợp CUSTOMER + ADMIN
// ===========================
model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  password        String? // Nullable cho Google OAuth users
  firstName       String    @map("first_name")
  lastName        String    @map("last_name")
  phone           String?   @unique
  avatar          String?
  avatarPublicId  String?   @map("avatar_public_id")
  googleId        String?   @unique @map("google_id")
  role            UserRole  @default(CUSTOMER) // Phân biệt CUSTOMER, STAFF, ADMIN
  isActive        Boolean   @default(true) @map("is_active")
  isVerified      Boolean   @default(false) @map("is_verified")
  emailVerifiedAt DateTime? @map("email_verified_at")
  lastLoginAt     DateTime? @map("last_login_at")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")

  // Relations
  addresses        Address[]
  otpVerifications OtpVerification[]
  passwordResets   PasswordReset[]
  shoppingCart     ShoppingCart[]
  wishlist         Wishlist[]
  comments         ProductComment[]
  reviews          ProductReview[]
  orders           Order[]
  notifications    Notification[]
  loginHistory     LoginHistory[]
  sessions         UserSession[]
  couponUsages     CouponUsage[]

  @@map("users")
}

// ===========================
// BẢNG XÁC THỰC OTP EMAIL
// ===========================
model OtpVerification {
  id          Int      @id @default(autoincrement())
  userId      Int?     @map("user_id")
  email       String
  otpCode     String   @map("otp_code")
  type        OtpType
  isUsed      Boolean  @default(false) @map("is_used")
  expiresAt   DateTime @map("expires_at")
  attempts    Int      @default(0)
  maxAttempts Int      @default(3) @map("max_attempts")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  user User? @relation(fields: [userId], references: [id])

  @@map("otp_verifications")
}

// ===========================
// BẢNG RESET MẬT KHẨU
// ===========================
model PasswordReset {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  token     String   @unique
  expiresAt DateTime @map("expires_at")
  isUsed    Boolean  @default(false) @map("is_used")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("password_resets")
}

// ===========================
// BẢNG ĐỊA CHỈ
// ===========================
model Address {
  id            Int         @id @default(autoincrement())
  userId        Int         @map("user_id")
  fullName      String      @map("full_name")
  phone         String
  streetAddress String      @map("street_address")
  ward          String
  district      String
  city          String
  addressType   AddressType @default(HOME) @map("address_type")
  isDefault     Boolean     @default(false) @map("is_default")
  note          String?
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("addresses")
}

// ===========================
// DANH MỤC SẢN PHẨM
// ===========================
model Category {
  id            Int      @id @default(autoincrement())
  name          String
  slug          String   @unique
  imageUrl      String?  @map("image_url")
  imagePublicId String?  @map("image_public_id")
  isActive      Boolean  @default(true) @map("is_active")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // Relations
  products Product[]

  @@map("categories")
}

// ===========================
// HÃNG SẢN XUẤT
// ===========================
model Brand {
  id        Int      @id @default(autoincrement())
  name      String
  country   String?
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  products Product[]

  @@map("brands")
}

// ===========================
// SẢN PHẨM
// ===========================
model Product {
  id              Int           @id @default(autoincrement())
  sku             String        @unique
  name            String
  slug            String        @unique
  description     String?
  categoryId      Int           @map("category_id")
  brandId         Int           @map("brand_id")
  status          ProductStatus @default(ACTIVE)
  isFeatured      Boolean       @default(false) @map("is_featured")
  price           Decimal       @db.Decimal(12, 2)
  salePrice       Decimal?      @map("sale_price") @db.Decimal(12, 2)
  costPrice       Decimal?      @map("cost_price") @db.Decimal(12, 2)
  stockQuantity   Int           @default(0) @map("stock_quantity")
  minStockLevel   Int           @default(5) @map("min_stock_level")
  imageUrl        String?       @map("image_url")
  imagePublicId   String?       @map("image_public_id")
  metaTitle       String?       @map("meta_title")
  metaDescription String?       @map("meta_description")
  viewCount       Int           @default(0) @map("view_count")
  createdAt       DateTime      @default(now()) @map("created_at")
  updatedAt       DateTime      @updatedAt @map("updated_at")

  // Relations
  category       Category               @relation(fields: [categoryId], references: [id])
  brand          Brand                  @relation(fields: [brandId], references: [id])
  specifications ProductSpecification[]
  images         ProductImage[]
  variants       ProductVariant[]
  cartItems      ShoppingCart[]
  wishlistItems  Wishlist[]
  comments       ProductComment[]
  reviews        ProductReview[]
  orderItems     OrderItem[]

  @@map("products")
}

// ===========================
// THÔNG SỐ KỸ THUẬT SẢN PHẨM
// ===========================
model ProductSpecification {
  id          Int      @id @default(autoincrement())
  productId   Int      @map("product_id")
  specName    String   @map("spec_name")
  specValue   String   @map("spec_value")
  specUnit    String?  @map("spec_unit")
  displayName String   @map("display_name")
  sortOrder   Int      @default(0) @map("sort_order")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  product Product @relation(fields: [productId], references: [id])

  @@unique([productId, specName])
  @@map("product_specifications")
}

// ===========================
// ẢNH SẢN PHẨM
// ===========================
model ProductImage {
  id            Int      @id @default(autoincrement())
  productId     Int      @map("product_id")
  imageUrl      String   @map("image_url")
  imagePublicId String?  @map("image_public_id")
  isPrimary     Boolean  @default(false) @map("is_primary")
  sortOrder     Int      @default(0) @map("sort_order")
  createdAt     DateTime @default(now()) @map("created_at")

  // Relations
  product Product @relation(fields: [productId], references: [id])

  @@map("product_images")
}

// ===========================
// BIẾN THỂ SẢN PHẨM
// ===========================
model ProductVariant {
  id            Int      @id @default(autoincrement())
  productId     Int      @map("product_id")
  sku           String   @unique
  name          String
  price         Decimal? @db.Decimal(12, 2)
  stockQuantity Int      @default(0) @map("stock_quantity")
  isActive      Boolean  @default(true) @map("is_active")
  size          String?
  color         String?
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // Relations
  product    Product        @relation(fields: [productId], references: [id])
  cartItems  ShoppingCart[]
  orderItems OrderItem[]

  @@map("product_variants")
}

// ===========================
// GIỎ HÀNG
// ===========================
model ShoppingCart {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  productId Int      @map("product_id")
  variantId Int?     @map("variant_id")
  quantity  Int      @default(1)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  user    User            @relation(fields: [userId], references: [id])
  product Product         @relation(fields: [productId], references: [id])
  variant ProductVariant? @relation(fields: [variantId], references: [id])

  @@unique([userId, productId, variantId])
  @@map("shopping_cart")
}

// ===========================
// DANH SÁCH YÊU THÍCH
// ===========================
model Wishlist {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  productId Int      @map("product_id")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@unique([userId, productId])
  @@map("wishlist")
}

// ===========================
// BÌNH LUẬN SẢN PHẨM
// ===========================
model ProductComment {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  productId  Int      @map("product_id")
  parentId   Int?     @map("parent_id")
  content    String
  isApproved Boolean  @default(false) @map("is_approved")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  // Relations
  user    User             @relation(fields: [userId], references: [id])
  product Product          @relation(fields: [productId], references: [id])
  parent  ProductComment?  @relation("CommentReplies", fields: [parentId], references: [id])
  replies ProductComment[] @relation("CommentReplies")

  @@map("product_comments")
}

// ===========================
// ĐÁNH GIÁ SẢN PHẨM
// ===========================
model ProductReview {
  id         Int      @id @default(autoincrement())
  productId  Int      @map("product_id")
  userId     Int      @map("user_id")
  orderId    Int?     @map("order_id")
  rating     Int
  title      String?
  comment    String?
  isApproved Boolean  @default(true) @map("is_approved")
  isVerified Boolean  @default(false) @map("is_verified")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  // Relations
  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])
  order   Order?  @relation(fields: [orderId], references: [id])

  @@unique([productId, userId])
  @@map("product_reviews")
}

// ===========================
// ĐƠN HÀNG
// ===========================
model Order {
  id               Int           @id @default(autoincrement())
  orderNumber      String        @unique @map("order_number")
  userId           Int           @map("user_id")
  status           OrderStatus   @default(PENDING)
  paymentStatus    PaymentStatus @default(PENDING) @map("payment_status")
  subtotal         Decimal       @db.Decimal(12, 2)
  shippingFee      Decimal       @default(0) @map("shipping_fee") @db.Decimal(12, 2)
  discountAmount   Decimal       @default(0) @map("discount_amount") @db.Decimal(12, 2)
  totalAmount      Decimal       @map("total_amount") @db.Decimal(12, 2)
  shippingAddress  Json          @map("shipping_address")
  paymentMethod    PaymentMethod @map("payment_method")
  paymentReference String?       @map("payment_reference")
  trackingCode     String?       @map("tracking_code")
  customerNote     String?       @map("customer_note")
  adminNote        String?       @map("admin_note")
  createdAt        DateTime      @default(now()) @map("created_at")
  updatedAt        DateTime      @updatedAt @map("updated_at")

  // Relations
  user         User            @relation(fields: [userId], references: [id])
  orderItems   OrderItem[]
  payments     Payment[]
  reviews      ProductReview[]
  couponUsages CouponUsage[]

  @@map("orders")
}

// ===========================
// CHI TIẾT ĐƠN HÀNG
// ===========================
model OrderItem {
  id          Int      @id @default(autoincrement())
  orderId     Int      @map("order_id")
  productId   Int      @map("product_id")
  variantId   Int?     @map("variant_id")
  productName String   @map("product_name")
  productSku  String   @map("product_sku")
  variantName String?  @map("variant_name")
  quantity    Int
  unitPrice   Decimal  @map("unit_price") @db.Decimal(12, 2)
  totalPrice  Decimal  @map("total_price") @db.Decimal(12, 2)
  createdAt   DateTime @default(now()) @map("created_at")

  // Relations
  order   Order           @relation(fields: [orderId], references: [id])
  product Product         @relation(fields: [productId], references: [id])
  variant ProductVariant? @relation(fields: [variantId], references: [id])

  @@map("order_items")
}

// ===========================
// MÃ GIẢM GIÁ
// ===========================
model Coupon {
  id            Int          @id @default(autoincrement())
  code          String       @unique
  name          String
  discountType  DiscountType @map("discount_type")
  discountValue Decimal      @map("discount_value") @db.Decimal(10, 2)
  minimumAmount Decimal      @default(0) @map("minimum_amount") @db.Decimal(12, 2)
  usageLimit    Int          @default(100) @map("usage_limit")
  usedCount     Int          @default(0) @map("used_count")
  startDate     DateTime     @map("start_date")
  endDate       DateTime     @map("end_date")
  isActive      Boolean      @default(true) @map("is_active")
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt @map("updated_at")

  // Relations
  usages CouponUsage[]

  @@map("coupons")
}

// ===========================
// LỊCH SỬ DÙNG MÃ GIẢM GIÁ
// ===========================
model CouponUsage {
  id       Int      @id @default(autoincrement())
  couponId Int      @map("coupon_id")
  userId   Int      @map("user_id")
  orderId  Int      @map("order_id")
  usedAt   DateTime @default(now()) @map("used_at")

  // Relations
  coupon Coupon @relation(fields: [couponId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
  order  Order  @relation(fields: [orderId], references: [id])

  @@map("coupon_usage")
}

// ===========================
// THANH TOÁN
// ===========================
model Payment {
  id            Int           @id @default(autoincrement())
  orderId       Int           @map("order_id")
  paymentMethod PaymentMethod @map("payment_method")
  paymentStatus PaymentStatus @default(PENDING) @map("payment_status")
  amount        Decimal       @db.Decimal(12, 2)
  transactionId String        @unique @map("transaction_id")
  paidAt        DateTime?     @map("paid_at")
  createdAt     DateTime      @default(now()) @map("created_at")

  // Relations
  order Order @relation(fields: [orderId], references: [id])

  @@map("payments")
}

// ===========================
// BANNER
// ===========================
model Banner {
  id             Int      @id @default(autoincrement())
  title          String
  imageUrl       String   @map("image_url")
  bannerPublicId String?  @map("banner_public_id")
  linkUrl        String?  @map("link_url")
  isActive       Boolean  @default(true) @map("is_active")
  sortOrder      Int      @default(0) @map("sort_order")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  @@map("banners")
}

// ===========================
// THÔNG BÁO
// ===========================
model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  title     String
  message   String
  type      String
  isRead    Boolean  @default(false) @map("is_read")
  createdAt DateTime @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("notifications")
}

// ===========================
// CÀI ĐẶT HỆ THỐNG
// ===========================
model Setting {
  id          Int      @id @default(autoincrement())
  keyName     String   @unique @map("key_name")
  value       String?
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("settings")
}

// ===========================
// LỊCH SỬ ĐĂNG NHẬP
// ===========================
model LoginHistory {
  id            Int         @id @default(autoincrement())
  userId        Int         @map("user_id")
  loginMethod   LoginMethod @map("login_method")
  ipAddress     String?     @map("ip_address")
  userAgent     String?     @map("user_agent")
  isSuccessful  Boolean     @default(true) @map("is_successful")
  failureReason String?     @map("failure_reason")
  createdAt     DateTime    @default(now()) @map("created_at")

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("login_history")
}

// ===========================
// SESSION QUẢN LÝ
// ===========================
model UserSession {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  sessionToken String   @unique @map("session_token")
  refreshToken String?  @unique @map("refresh_token")
  deviceInfo   String?  @map("device_info")
  ipAddress    String?  @map("ip_address")
  isActive     Boolean  @default(true) @map("is_active")
  expiresAt    DateTime @map("expires_at")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [userId], references: [id])

  @@map("user_sessions")
}

// ===========================
// ENUMS
// ===========================
enum UserRole {
  CUSTOMER
  ADMIN
}

enum OtpType {
  EMAIL_VERIFICATION
  PASSWORD_RESET
}

enum AddressType {
  HOME
  OFFICE
}

enum ProductStatus {
  ACTIVE
  INACTIVE
  OUT_OF_STOCK
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentMethod {
  COD
  MOMO
  VNPAY
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
}

enum DiscountType {
  PERCENT
  AMOUNT
}

enum LoginMethod {
  EMAIL_PASSWORD
  GOOGLE
}

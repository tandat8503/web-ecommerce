version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: web-ecommerce-backend:latest
    container_name: web-ecommerce-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      # Database - Kết nối với XAMPP MySQL
      DATABASE_URL: "mysql://root:@host.docker.internal:3306/ecommerce_db"
      
      # JWT
      JWT_SECRET: "your-super-secret-jwt-key-change-in-production-123456789"
      JWT_EXPIRES_IN: "24h"
      JWT_REFRESH_EXPIRES_IN: "7d"
      
      # Server
      PORT: 5000
      NODE_ENV: "production"
      
      # Frontend URL
      FRONTEND_URL: "http://localhost:3000"
      
      # Cloudinary (thay đổi theo tài khoản của bạn)
      CLOUDINARY_CLOUD_NAME: "your_cloud_name"
      CLOUDINARY_API_KEY: "your_api_key"
      CLOUDINARY_API_SECRET: "your_api_secret"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./logs:/app/logs
    networks:
      - web-ecommerce-network
    depends_on:
      - db-wait
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: web-ecommerce-frontend:latest
    container_name: web-ecommerce-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: "http://localhost:5000/api"
      VITE_APP_NAME: "Web E-commerce"
    networks:
      - web-ecommerce-network
    depends_on:
      - backend

  # Database Wait Service (chờ XAMPP MySQL)
  db-wait:
    image: busybox:1.35
    container_name: web-ecommerce-db-wait
    command: >
      sh -c "
        echo '⏳ Waiting for XAMPP MySQL to be ready...'
        while ! nc -z host.docker.internal 3306; do
          echo 'Waiting for XAMPP MySQL...'
          sleep 2
        done
        echo '✅ XAMPP MySQL is ready!'
        exit 0
      "
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - web-ecommerce-network

networks:
  web-ecommerce-network:
    driver: bridge

volumes:
  logs:
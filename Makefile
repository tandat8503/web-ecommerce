# Makefile cho Web E-commerce Project
# S·ª≠ d·ª•ng v·ªõi XAMPP MySQL

.PHONY: help build up down logs clean restart status

# M√†u s·∫Øc cho output
GREEN=\033[0;32m
YELLOW=\033[1;33m
RED=\033[0;31m
NC=\033[0m # No Color

help: ## Hi·ªÉn th·ªã danh s√°ch c√°c l·ªánh c√≥ s·∫µn
	@echo "$(GREEN)Web E-commerce Project - Docker Commands$(NC)"
	@echo "=============================================="
	@echo ""
	@echo "$(YELLOW)Database Setup:$(NC)"
	@echo "  make db-setup     - T·∫°o database v√† ch·∫°y migrations"
	@echo ""
	@echo "$(YELLOW)Docker Commands:$(NC)"
	@echo "  make build        - Build t·∫•t c·∫£ Docker images"
	@echo "  make up           - Kh·ªüi ƒë·ªông t·∫•t c·∫£ services"
	@echo "  make down         - D·ª´ng t·∫•t c·∫£ services"
	@echo "  make restart      - Restart t·∫•t c·∫£ services"
	@echo "  make logs         - Xem logs c·ªßa t·∫•t c·∫£ services"
	@echo "  make status       - Ki·ªÉm tra tr·∫°ng th√°i services"
	@echo ""
	@echo "$(YELLOW)Individual Services:$(NC)"
	@echo "  make backend      - Ch·ªâ ch·∫°y backend"
	@echo "  make frontend     - Ch·ªâ ch·∫°y frontend"
	@echo ""
	@echo "$(YELLOW)Cleanup:$(NC)"
	@echo "  make clean        - X√≥a t·∫•t c·∫£ containers v√† images"
	@echo "  make clean-all    - X√≥a t·∫•t c·∫£ containers, images v√† volumes"
	@echo ""
	@echo "$(RED)L∆∞u √Ω: ƒê·∫£m b·∫£o XAMPP MySQL ƒëang ch·∫°y tr∆∞·ªõc khi s·ª≠ d·ª•ng!$(NC)"

# Database setup
db-setup: ## T·∫°o database v√† ch·∫°y migrations
	@echo "$(GREEN)üîß Setting up database...$(NC)"
	@echo "ƒê·∫£m b·∫£o XAMPP MySQL ƒëang ch·∫°y tr√™n port 3306"
	@echo "T·∫°o database 'ecommerce_db' trong phpMyAdmin"
	@echo "Sau ƒë√≥ ch·∫°y: make up"

# Docker commands
build: ## Build t·∫•t c·∫£ Docker images
	@echo "$(GREEN)üî® Building Docker images...$(NC)"
	docker-compose build

up: ## Kh·ªüi ƒë·ªông t·∫•t c·∫£ services
	@echo "$(GREEN)üöÄ Starting Web E-commerce services...$(NC)"
	@echo "$(YELLOW)ƒê·∫£m b·∫£o XAMPP MySQL ƒëang ch·∫°y!$(NC)"
	docker-compose up -d
	@echo "$(GREEN)‚úÖ Services started!$(NC)"
	@echo "Frontend: http://localhost:3000"
	@echo "Backend API: http://localhost:5000"

down: ## D·ª´ng t·∫•t c·∫£ services
	@echo "$(YELLOW)üõë Stopping services...$(NC)"
	docker-compose down

restart: ## Restart t·∫•t c·∫£ services
	@echo "$(YELLOW)üîÑ Restarting services...$(NC)"
	docker-compose restart

logs: ## Xem logs c·ªßa t·∫•t c·∫£ services
	docker-compose logs -f

status: ## Ki·ªÉm tra tr·∫°ng th√°i services
	@echo "$(GREEN)üìä Service Status:$(NC)"
	docker-compose ps

# Individual services
backend: ## Ch·ªâ ch·∫°y backend
	@echo "$(GREEN)üîß Starting backend only...$(NC)"
	docker-compose up -d backend db-wait

frontend: ## Ch·ªâ ch·∫°y frontend
	@echo "$(GREEN)üé® Starting frontend only...$(NC)"
	docker-compose up -d frontend

# Cleanup
clean: ## X√≥a containers v√† images
	@echo "$(RED)üßπ Cleaning up containers and images...$(NC)"
	docker-compose down --rmi all

clean-all: ## X√≥a t·∫•t c·∫£ containers, images v√† volumes
	@echo "$(RED)üßπ Cleaning up everything...$(NC)"
	docker-compose down --rmi all --volumes --remove-orphans
	docker system prune -f

# Development helpers
dev-logs: ## Xem logs development
	docker-compose logs -f backend frontend

backend-logs: ## Xem logs backend
	docker-compose logs -f backend

frontend-logs: ## Xem logs frontend
	docker-compose logs -f frontend

# Database helpers
db-migrate: ## Ch·∫°y Prisma migrations
	@echo "$(GREEN)üîÑ Running Prisma migrations...$(NC)"
	docker-compose exec backend npx prisma migrate deploy

db-seed: ## Ch·∫°y database seeding
	@echo "$(GREEN)üå± Seeding database...$(NC)"
	docker-compose exec backend npm run seed

db-reset: ## Reset database (c·∫©n th·∫≠n!)
	@echo "$(RED)‚ö†Ô∏è  Resetting database...$(NC)"
	docker-compose exec backend npx prisma migrate reset --force
